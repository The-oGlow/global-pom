<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.glowa-net.maven.parent</groupId>
    <artifactId>global-pom</artifactId>
    <version>3-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- Section Common -->
    <!-- ============================================== -->
    <name>Global POM</name>
    <description>The base pom 4 everything. Use the child-pom's as parent 4 ur artifacts.</description>
    <url>http://coding.glowa-net.com</url>
    <inceptionYear>2020</inceptionYear>

    <organization>
        <name>The oGlow</name>
        <url>http://coding.glowa-net.com</url>
    </organization>

    <licenses>
        <license>
            <name>${project.license.name}</name>
            <url>${project.license.url}</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>ollily</id>
            <name>Oliver Glowa</name>
            <email>coding at glowa-net dot com</email>
            <organization>The oGlow</organization>
            <organizationUrl>http://coding.glowa-net.com</organizationUrl>
            <roles>
                <role>Project Owner</role>
                <role>Main Developer</role>
            </roles>
            <timezone>Europe/Berlin</timezone>
        </developer>
    </developers>

    <mailingLists>
        <mailingList>
            <name>No Mailinglist</name>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:git:https://github.com/The-oGlow/global-pom.git</connection>
        <developerConnection>scm:git:https://github.com/The-oGlow/global-pom.git</developerConnection>
        <url>${project.env.GH_PROJECT_URL}</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Github Issues 4 ${project.name}</system>
        <url>${project.env.GH_PROJECT_URL}/issues</url>
    </issueManagement>

    <ciManagement>
        <system>github</system>
        <url>${project.env.GH_PROJECT_URL}/actions</url>
    </ciManagement>

    <!-- Section Distribution -->
    <!-- ============================================== -->
    <distributionManagement>
        <!-- Activate a "profile-<name>" for a source provider -->
        <repository>
            <id>repository-notdefined</id>
        </repository>
        <snapshotRepository>
            <id>snapshot-notdefined</id>
        </snapshotRepository>
    </distributionManagement>

    <!-- Section Properties -->
    <!-- ============================================== -->
    <properties>
        <!-- Project Properties -->
        <!-- ============================================== -->
        <project.license.name>Apache License, Version 2.0</project.license.name>
        <project.license.url>http://www.apache.org/licenses/LICENSE-2.0.txt</project.license.url>
        <project.license.id>apache_v2</project.license.id>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Java Properties -->
        <!-- ============================================== -->
        <java.version>11</java.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Maven Plugin Versions -->
        <!-- ============================================== -->
        <!-- == How to handle:
             == 1) Define the version-tag by using this pattern:<groupId>+"-"+"-"+<artifactId>+".version"
             == 2) Add the tag in alphabetic order in this section
             == -->
        <org.asciidoctor--asciidoctor-maven-plugin.version>2.2.1</org.asciidoctor--asciidoctor-maven-plugin.version>

        <!-- 3rd Party Dependencies Versions -->
        <!-- ============================================== -->
        <!-- == How to handle:
             == 1) Define the version-tag by using this pattern:<groupId>+"-"+<artifactId>+".version"
             == 2) Add the tag in alphabetic order in this section
             == -->
        <ch.qos.logback.version>1.2.11</ch.qos.logback.version>
        <commons-beanutils.commons-beanutils.version>1.9.4</commons-beanutils.commons-beanutils.version>
        <commons-cli.commons-cli.version>1.5.0</commons-cli.commons-cli.version>
        <commons-codec.commons-codec.version>1.15</commons-codec.commons-codec.version>
        <javax.xml.bind.jaxb-api.version>2.2.3</javax.xml.bind.jaxb-api.version>
        <org.apache.commons.commons-collections4.version>4.4</org.apache.commons.commons-collections4.version>
        <org.apache.commons.commons-csv.version>1.9.0</org.apache.commons.commons-csv.version>
        <commons-io.commons-io.version>2.11.0</commons-io.commons-io.version>
        <org.apache.commons.commons-jcs3.version>3.1</org.apache.commons.commons-jcs3.version>
        <org.apache.commons.commons-lang3.version>3.12.0</org.apache.commons.commons-lang3.version>
        <org.apache.commons.commons-math3.version>3.6.1</org.apache.commons.commons-math3.version>
        <commons-net.commons-net.version>3.8.0</commons-net.commons-net.version>
        <org.apache.commons.commons-pool2.version>2.11.1</org.apache.commons.commons-pool2.version>
        <org.apache.commons.commons-rng.version>1.4</org.apache.commons.commons-rng.version>
        <org.apache.commons.commons-text.version>1.9</org.apache.commons.commons-text.version>
        <org.apache.logging.log4j.version>2.17.2</org.apache.logging.log4j.version>
        <org.apache.maven.plugin-tools.maven-plugin-annotations.version>3.7.0
        </org.apache.maven.plugin-tools.maven-plugin-annotations.version>
        <org.apache.maven.shared.maven-dependency-analyzer.version>1.12.0
        </org.apache.maven.shared.maven-dependency-analyzer.version>
        <org.apache.maven.skins.maven.fluido.skin.version>1.9</org.apache.maven.skins.maven.fluido.skin.version>
        <org.assertj.version>3.22.0</org.assertj.version>
        <org.awaitility.version>4.2.0</org.awaitility.version>
        <org.easymock.version>4.3</org.easymock.version>
        <org.junit4.version>4.13.2</org.junit4.version>
        <org.junit5.version>5.8.2</org.junit5.version>
        <org.hamcrest.version>2.2</org.hamcrest.version>
        <org.hamcrest.java-hamcrest.version>2.0.0.0</org.hamcrest.java-hamcrest.version>
        <org.mockito.version>4.5.1</org.mockito.version>
        <org.powermock.version>2.0.9</org.powermock.version>
        <org.powermock.easymock.version>${org.powermock.version}</org.powermock.easymock.version>
        <org.powermock.mockito2.version>${org.powermock.version}</org.powermock.mockito2.version>
        <org.slf4j.version>1.7.36</org.slf4j.version>
        <org.springframework.version>5.3.30</org.springframework.version>

        <!-- Maven Plugin Properties -->
        <!-- ============================================== -->
        <maven.plugin.tools.version>3.7.0</maven.plugin.tools.version>
        <minimalJavaBuildVersion>1.8</minimalJavaBuildVersion>
        <minimalMavenBuildVersion>3.2.5</minimalMavenBuildVersion>

        <!-- dependency-check-maven -->
        <dependency-check.skip>false</dependency-check.skip>

        <!-- maven-assembly-plugin -->
        <assembly.tarLongFileMode>posix</assembly.tarLongFileMode>

        <!-- maven-dependency-plugin -->
        <mdep.analyze.skip>false</mdep.analyze.skip>
        <mdep.skip>false</mdep.skip>

        <!-- maven-surefire-/maven-failsafe-plugin -->
        <skipTests>false</skipTests>
        <skip.surefire.tests>${skipTests}</skip.surefire.tests>
        <skipITs>false</skipITs>
        <skip.failsafe.tests>${skipITs}</skip.failsafe.tests>

        <!-- maven-excec-plugin -->
        <maven.home>${env.M2_HOME}</maven.home>
        <maven.bin>${maven.home}/bin/mvn${script.extension}</maven.bin>

        <!-- maven-javadoc-plugin -->
        <maven.javadoc.skip>false</maven.javadoc.skip>

        <!-- maven-site-plugin -->
        <maven.site.skip>false</maven.site.skip>
        <site.image.folder>images</site.image.folder>
        <site.image.logo.folder>${site.image.folder}/logos</site.image.logo.folder>
        <site.organization.logo.filename>logo-${project.organization.name}.jpg</site.organization.logo.filename>
        <site.project.logo.filename>logo-module.jpg</site.project.logo.filename>

        <!-- jacoco-maven-plugin -->
        <jacoco.destFolder>${project.build.directory}/jacoco</jacoco.destFolder>
        <jacoco.coverageRatio.class>0.8</jacoco.coverageRatio.class>
        <jacoco.coverageRatio.line>0.8</jacoco.coverageRatio.line>
        <!-- -->
        <jacoco.reportFile>${jacoco.destFolder}/jacoco-ut.exec</jacoco.reportFile>
        <jacoco.itReportFile>${jacoco.destFolder}/jacoco-it.exec</jacoco.itReportFile>
        <jacoco.commonReportFile>${jacoco.destFolder}/jacoco.common</jacoco.commonReportFile>
        <jacoco.commonReportXmlFileName>jacoco.xml</jacoco.commonReportXmlFileName>
        <!-- -->
        <jacoco.reportTitle>UT Coverage-Report for ${project.name}</jacoco.reportTitle>
        <jacoco.itReportTitle>IT Coverage-Report for ${project.name}</jacoco.itReportTitle>
        <jacoco.commonReportTitle>UT+IT Coverage for ${project.name}</jacoco.commonReportTitle>
        <!-- -->
        <jacoco.reportOutputFolder>${jacoco.destFolder}/ut</jacoco.reportOutputFolder>
        <jacoco.itReportOutputFolder>${jacoco.destFolder}/it</jacoco.itReportOutputFolder>
        <jacoco.commonReportOutputFolder>${jacoco.destFolder}/comm</jacoco.commonReportOutputFolder>

        <!-- coveralls-maven-plugin -->
        <!-- ============================================== -->
        <coveralls.destFolder>${project.build.directory}/coveralls</coveralls.destFolder>
        <coveralls.outputFile>${coveralls.destFolder}/coveralls.json</coveralls.outputFile>
        <coveralls.reportFileJacoco>${jacoco.commonReportOutputFolder}/${jacoco.commonReportXmlFileName}
        </coveralls.reportFileJacoco>

        <!-- sonar-maven-plugin -->
        <!-- ============================================== -->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.projectKey>${sonar.organization}_${project.artifactId}</sonar.projectKey>
        <sonar.projectName>${project.artifactId}</sonar.projectName>
        <!-- -->
        <sonar.log.level>INFO</sonar.log.level>
        <sonar.verbose>false</sonar.verbose>
        <sonar.scm.provider>git</sonar.scm.provider>
        <sonar.sourceEncoding>${project.build.sourceEncoding}</sonar.sourceEncoding>
        <sonar.java.source>${java.version}</sonar.java.source>
        <sonar.sources>pom.xml,src/main,src/site</sonar.sources>
        <sonar.tests>src/test</sonar.tests>
        <!-- -->
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.coverage.jacoco.xmlReportPaths>
            ${jacoco.reportOutputFolder}/${jacoco.commonReportXmlFileName},${jacoco.itReportOutputFolder}/${jacoco.commonReportXmlFileName}
        </sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <!-- Section Dependencies -->
    <!-- ============================================== -->
    <dependencyManagement>
        <!-- ==
             == How to handle:
             == 1)    Verify, if the dependency needs a special position inside the dependencyManagement-tag (normally not necessary).
             == 1.1)  Default: If there is no relevant order required, search for a suitable main-section (e.g. "Apache Dependencies, Sprint, etc.").
             == 1.2)  In case you'll have to add multible dependencies from the same vendor or framewark, add a new main section-tag.
             ==       Add the section in alphabetic order to the other main sections (those with a "=======" below).
             == 1.3)  If there is no suitable main section, add the dependency in section "Other Dependencies".
             == 2)    Inside the section, add the dependency in alphabetic order (1. groupid, 2. artifactid) into the section.
             == 3)    There is no need to define a specific "scope".
             == 4)    Only common and global, like "exclusions" are defined inside the dependencyManagement-tag.
             ==       Any other configurations are done inside the dependencies-tag of the artifact.
             == Additionally
             == 5)    Within the dependencyManagement-Tag, any other sorting than alphabetic, is not necessary!
             == -->
        <dependencies>
            <!-- Testing Dependencies -->
            <!-- ============================================== -->
            <!-- JUnit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${org.junit4.version}</version>

            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${org.junit5.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Hamcrest -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>java-hamcrest</artifactId>
                <version>${org.hamcrest.java-hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${org.hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${org.hamcrest.version}</version>
            </dependency>

            <!-- AssertJ -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${org.assertj.version}</version>
            </dependency>

            <!-- Mockito -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${org.mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Powermock -->
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-core</artifactId>
                <version>${org.powermock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${org.powermock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-easymock</artifactId>
                <version>${org.powermock.easymock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${org.powermock.mockito2.version}</version>
            </dependency>

            <!-- Easy Mock -->
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${org.easymock.version}</version>
            </dependency>

            <!-- Awaitility -->
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${org.awaitility.version}</version>
            </dependency>

            <!-- Logging Dependencies -->
            <!-- ============================================== -->
            <!-- Apache Logging -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${org.apache.logging.log4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${org.apache.logging.log4j.version}</version>
                <type>test-jar</type>
            </dependency>

            <!-- Logback Logging -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>

            <!-- slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${org.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${org.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${org.slf4j.version}</version>
            </dependency>

            <!-- Apache Commons Dependencies -->
            <!-- ============================================== -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.commons-cli.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${org.apache.commons.commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${org.apache.commons.commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${org.apache.commons.commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>${org.apache.commons.commons-dbcp.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-dbutils</groupId>
                <artifactId>commons-dbutils</artifactId>
                <version>${commons-dbutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-email</artifactId>
                <version>${org.apache.commons.commons-email.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-exec</artifactId>
                <version>${org.apache.commons.commons-exec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-jcs3</artifactId>
                <version>${org.apache.commons.commons-jcs3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${org.apache.commons.commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${org.apache.commons.commons-math3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${org.apache.commons.commons-pool2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-rng-client-api</artifactId>
                <version>${org.apache.commons.commons-rng.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-rng-core</artifactId>
                <version>${org.apache.commons.commons-rng.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-rng-simple</artifactId>
                <version>${org.apache.commons.commons-rng.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${org.apache.commons.commons-text.version}</version>
            </dependency>

            <!-- Apache Dependencies -->
            <!-- ============================================== -->
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${org.apache.maven.plugin-tools.maven-plugin-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.skins</groupId>
                <artifactId>maven-fluido-skin</artifactId>
                <version>${org.apache.maven.skins.maven.fluido.skin.version}</version>
            </dependency>

            <!-- Spring Dependencies -->
            <!-- ============================================== -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>

            <!-- Other Dependencies -->
            <!-- ============================================== -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${javax.xml.bind.jaxb-api.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Dependencies must not be defined inside this artifact here! -->
        <!-- ==
             == For any other artifacts:
             ==
             == How to handle:
             == Please refer to dependencyManagement-tag, "How to handle"
             == Additionally
             == 5.2) In case, the order of the dependencies is relevant, then IGNORE the alphabetic order.
             == 5.2) Insert the dependency at the necessary position inside the dependency-tag.
             == 5.3) Add a comment, about the neccessary of this position to avoid someone else will resort this depedency.
             == -->
    </dependencies>

    <!-- Section Repositories -->
    <!-- ============================================== -->
    <repositories>
        <repository>
            <id>coding.central</id>
            <name>Central is the 1st in row.</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>coding.central</id>
            <name>Central is the 1st in row.</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <!-- Section Build -->
    <!-- ============================================== -->
    <build>
        <!-- ==
             == How to handle:
             == Please refer to dependencyManagement-tag, "How to handle", to handle the pluginManagement-tag in the same way.
             == Additionally
             == 5)    Within the pluginManagement-tag, any other sorting than alphabetic, is not necessary!
             == -->
        <pluginManagement>
            <!-- Maven Plugins -->
            <!-- ============================================== -->
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.doxia</groupId>
                    <artifactId>doxia-sitetools</artifactId>
                    <version>1.10</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.0.1</version>
                    <configuration>
                        <gpgArguments>
                            <arg>--digest-algo=SHA512</arg>
                        </gpgArguments>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jarsigner-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>3.7.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-report-plugin</artifactId>
                    <version>3.7.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                    <version>1.7.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.11.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-publish-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.skins</groupId>
                    <artifactId>maven-fluido-skin</artifactId>
                    <version>${org.apache.maven.skins.maven.fluido.skin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.rat</groupId>
                    <artifactId>apache-rat-plugin</artifactId>
                    <version>0.15</version>
                </plugin>

                <!-- 3rd Party Plugins -->
                <!-- ============================================== -->
                <plugin>
                    <groupId>com.github.ekryd.echo-maven-plugin</groupId>
                    <artifactId>echo-maven-plugin</artifactId>
                    <version>1.3.2</version>
                </plugin>
                <plugin>
                    <groupId>net.nicoulaj.maven.plugins</groupId>
                    <artifactId>checksum-maven-plugin</artifactId>
                    <version>1.11</version>
                </plugin>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${org.asciidoctor--asciidoctor-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>1.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>4.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.7</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>7.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.simplify4u.plugins</groupId>
                    <artifactId>pgpverify-maven-plugin</artifactId>
                    <version>1.14.1</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.9.1.2184</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- ==
             == How to handle:
             == Please refer to dependency-tag, "How to handle", to handle the plugins-tag in the same way.
             == Additionally
             == 5.2) In case, the order of the plugins is relevant, then IGNORE the alphabetic order.
             == 5.2) Insert the plugin at the necessary position inside the plugin-tag.
             == 5.3) Add a comment, about the neccessary of this position to avoid someone else will resort this plugin.
             == -->
        <plugins>
            <!-- Apache Maven Plugins -->
            <!-- ============================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/overlays</directory>
                            <followSymlinks>false</followSymlinks>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${java.version}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.0</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>9</version>
                                </requireJavaVersion>
                                <requireSameVersions>
                                    <plugins>
                                        <plugin>org.apache.maven.plugins:maven-surefire-plugin</plugin>
                                        <plugin>org.apache.maven.plugins:maven-failsafe-plugin</plugin>
                                        <plugin>org.apache.maven.plugins:maven-surefire-report-plugin</plugin>
                                    </plugins>
                                </requireSameVersions>
                                <requireEnvironmentVariable>
                                    <variableName>JAVA_HOME</variableName>
                                </requireEnvironmentVariable>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-java-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>9</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>3.6.0</version>
                                </requireMavenVersion>
                                <requireSameVersions>
                                    <plugins>
                                        <plugin>org.apache.maven.plugins:maven-surefire-plugin</plugin>
                                        <plugin>org.apache.maven.plugins:maven-failsafe-plugin</plugin>
                                        <plugin>org.apache.maven.plugins:maven-surefire-report-plugin</plugin>
                                    </plugins>
                                </requireSameVersions>
                                <requireEnvironmentVariable>
                                    <variableName>JAVA_HOME</variableName>
                                </requireEnvironmentVariable>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <skipITs>${skip.failsafe.tests}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <id>default-integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <phase>integration-test</phase>
                    </execution>
                    <execution>
                        <id>default-verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <executions>
                    <execution>
                        <id>show-profiles</id>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Component-Name>${project.name}</Component-Name>
                            <Component-Version>${project.version}</Component-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <providerImplementations>
                        <git>jgit</git>
                    </providerImplementations>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-resource-bundles</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <resourceBundles>
                                <resourceBundle>org.apache:apache-jar-resource-bundle:1.4</resourceBundle>
                            </resourceBundles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <configuration>
                    <providerImplementations>
                        <git>jgit</git>
                    </providerImplementations>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <skipTests>${skip.surefire.tests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>false</addClasspath>
                        </manifest>
                        <manifestEntries>
                            <Component-Name>${project.name}</Component-Name>
                            <Component-Version>${project.version}</Component-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- Codehaus Plugins -->
            <!-- ============================================== -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-clean</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>clean</phase>
                        <configuration>
                            <name>clean.cleaned</name>
                            <value>true</value>
                            <regex>false</regex>
                            <replacement>false</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-snapshot</id>
                        <goals>
                            <goal>regex-properties</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <regexPropertySettings>
                                <regexPropertySetting>
                                    <name>release.isrelease</name>
                                    <value>${project.version} true false</value>
                                    <regex>(?!.*SNAPSHOT).*(true).*|.*(false).*</regex>
                                    <replacement>$1$2</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                    <toLowerCase>true</toLowerCase>
                                </regexPropertySetting>
                                <regexPropertySetting>
                                    <name>release.issnapshot</name>
                                    <value>${project.version} true false</value>
                                    <regex>(?=.*SNAPSHOT).*(true).*|.*(false).*</regex>
                                    <replacement>$1$2</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                    <toLowerCase>true</toLowerCase>
                                </regexPropertySetting>
                            </regexPropertySettings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 3rd Party Plugins -->
            <!-- ============================================== -->
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <configuration>
                    <attributes>
                        <showtitle/>
                    </attributes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Section Reporting -->
    <!-- ============================================== -->
    <reporting>
        <!-- ==
             == How to handle:
             == Please refer to plugins-tag, "How to handle", to handle the reporting-plugins-tag in the same way.
             == -->
        <plugins>
            <!-- Plugins may be defined here! -->
        </plugins>
    </reporting>

    <!-- Section Profiles -->
    <!-- ============================================== -->
    <profiles>
        <!-- ==
             == How to handle:
             == 1) Profiles are NOT allowed to us "activated by default".
             == 2) Profiles are added in alphabetic order by the profile-id-tag inside the profiles-tag.
             == 3) Properties, which are only used inside the profile, are defined in the profile, not pom-globally.
             == 4) Configurations, which are only used inside an execution, are defined in the execution, not profile-globally.
             == -->
        <profile>
            <!--
                Description     :   Add all additional analysis and build steps
                Syntax          :   automtically chosen
                -->
            <id>000build-default</id>
            <activation>
                <property>
                    <name>!fastBuild</name>
                </property>
            </activation>

            <reporting>
                <plugins>
                    <!-- Apache Maven Plugins -->
                    <!-- ============================================== -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <failOnError>false</failOnError>
                            <notimestamp>true</notimestamp>
                            <skip>${maven.javadoc.skip}</skip>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>default-javadoc</id>
                                <reports>
                                    <report>javadoc</report>
                                    <report>aggregate</report>
                                </reports>
                            </reportSet>
                            <reportSet>
                                <id>default-test-javadoc</id>
                                <reports>
                                    <report>test-javadoc</report>
                                    <report>test-aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>dependencies</report>
                                    <report>dependency-info</report>
                                    <report>dependency-management</report>
                                    <report>distribution-management</report>
                                    <report>index</report>
                                    <report>issue-management</report>
                                    <report>licenses</report>
                                    <report>modules</report>
                                    <report>summary</report>
                                    <report>team</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                        <configuration>
                            <pluginManagementExcludes>
                                <exclude>org.eclipse.m2e:lifecycle-mapping</exclude>
                            </pluginManagementExcludes>
                        </configuration>
                    </plugin>
                    <!-- 3rd Party Plugins -->
                    <!-- ============================================== -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <id>default-report</id>
                                <inherited>true</inherited>
                                <configuration>
                                    <dataFile>${jacoco.commonReportFile}</dataFile>
                                    <title>${jacoco.commonReportTitle}</title>
                                </configuration>
                                <reports>
                                    <report>report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>

            <build>
                <plugins>
                    <!-- Apache Maven Plugins -->
                    <!-- ============================================== -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-descriptor</id>
                                <goals>
                                    <goal>attach-descriptor</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <generateSitemap>true</generateSitemap>
                            <locales>en,de</locales>
                            <relativizeDecorationLinks>false</relativizeDecorationLinks>
                            <pomPackagingOnly>false</pomPackagingOnly>
                            <skip>${maven.site.skip}</skip>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctor-maven-plugin</artifactId>
                                <version>${org.asciidoctor--asciidoctor-maven-plugin.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <!-- Codehaus Plugins -->
                    <!-- ============================================== -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <configuration>
                            <licenseName>${project.license.id}</licenseName>
                            <addJavaLicenseAfterPackage>true</addJavaLicenseAfterPackage>
                            <emptyLineAfterHeader>false</emptyLineAfterHeader>
                            <trimHeaderLine>false</trimHeaderLine>
                            <excludes>
                                <exclude>**/*.xml</exclude>
                            </excludes>
                            <includes>
                                <include>**/*.java</include>
                            </includes>
                            <roots>
                                <root>src/main/java</root>
                                <root>src/test/java</root>
                            </roots>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check-file-header</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <failOnMissingHeader>false</failOnMissingHeader>
                                    <failOnNotUptodateHeader>false</failOnNotUptodateHeader>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- 3rd Party Plugins -->
                    <!-- ============================================== -->
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                        <configuration>
                            <coverallsFile>${coveralls.outputFile}</coverallsFile>
                            <jacocoReports>${coveralls.reportFileJacoco}</jacocoReports>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>javax.xml.bind</groupId>
                                <artifactId>jaxb-api</artifactId>
                                <version>${javax.xml.bind.jaxb-api.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <phase>initialize</phase>
                                <configuration>
                                    <destFile>${jacoco.reportFile}</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-prepare-agent-integration</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <destFile>${jacoco.itReportFile}</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <dataFile>${jacoco.reportFile}</dataFile>
                                    <title>${jacoco.reportTitle}</title>
                                    <outputDirectory>${jacoco.reportOutputFolder}</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-report-integration</id>
                                <goals>
                                    <goal>report-integration</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <dataFile>${jacoco.itReportFile}</dataFile>
                                    <title>${jacoco.itReportTitle}</title>
                                    <outputDirectory>${jacoco.itReportOutputFolder}</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-merge</id>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${jacoco.destFolder}</directory>
                                            <includes>
                                                <include>*.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>${jacoco.commonReportFile}</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-report-common</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <dataFile>${jacoco.commonReportFile}</dataFile>
                                    <title>${jacoco.commonReportTitle}</title>
                                    <outputDirectory>${jacoco.commonReportOutputFolder}</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <dataFile>${jacoco.commonReportFile}</dataFile>
                                    <haltOnFailure>false</haltOnFailure>
                                    <rules>
                                        <rule>
                                            <!-- Check artifact coverage -->
                                            <element>BUNDLE</element>
                                            <excludes>
                                                <!-- Don't check test classes -->
                                                <exclude>*Test</exclude>
                                                <exclude>*IT</exclude>
                                            </excludes>
                                            <limits>
                                                <!-- Overall artifact coverage too low -->
                                                <limit>
                                                    <counter>CLASS</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${jacoco.coverageRatio.class}</minimum>
                                                </limit>
                                                <!-- Classes without a test -->
                                                <limit>
                                                    <counter>CLASS</counter>
                                                    <value>MISSEDCOUNT</value>
                                                    <maximum>0</maximum>
                                                </limit>
                                            </limits>
                                        </rule>
                                        <rule>
                                            <!-- Check package coverage -->
                                            <element>PACKAGE</element>
                                            <excludes>
                                                <!-- Don't check test classes -->
                                                <exclude>*Test</exclude>
                                                <exclude>*IT</exclude>
                                            </excludes>
                                            <limits>
                                                <!-- Package coverage too low -->
                                                <limit>
                                                    <counter>CLASS</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${jacoco.coverageRatio.class}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                        <rule>
                                            <!-- Check class coverage -->
                                            <element>CLASS</element>
                                            <excludes>
                                                <!-- Don't check test classes -->
                                                <exclude>*Test</exclude>
                                                <exclude>*IT</exclude>
                                                <!-- Don't be more papal than the pope. That's the task of the SQA system. -->
                                                <exclude>*Exception</exclude>
                                                <exclude>*Constants</exclude>
                                                <exclude>*Properties</exclude>
                                                <exclude>Abstract*</exclude>
                                            </excludes>
                                            <limits>
                                                <!-- line coverage too low -->
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${jacoco.coverageRatio.line}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <failOnError>false</failOnError>
                                    <formats>
                                        <format>HTML</format>
                                        <format>XML</format>
                                        <format>JSON</format>
                                        <format>JUNIT</format>
                                    </formats>
                                    <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                                    <skip>${dependency-check.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Deactivate all analysis and test steps for a faster build
                Syntax          :   mvn -DfastBuild [any goal]
                Example         :   mvn -DfastBuild validate
                -->
            <id>000build-fast</id>
            <activation>
                <property>
                    <name>fastBuild</name>
                </property>
            </activation>
            <properties>
                <dependency-check.skip>true</dependency-check.skip>
                <maven.javadoc.skip>true</maven.javadoc.skip>
                <maven.site.skip>true</maven.site.skip>
                <mdep.analyze.skip>true</mdep.analyze.skip>
                <mdep.skip>true</mdep.skip>
                <skip.failsafe.tests>true</skip.failsafe.tests>
                <skip.surefire.tests>true</skip.surefire.tests>
            </properties>
            <build>
                <plugins>
                    <!-- Apache Maven Plugins -->
                    <!-- ============================================== -->
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <configuration>
                            <skip>${dependency-check.skip}</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <configuration>
                            <skip>${mdep.skip}</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>${skip.failsafe.tests}</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <skip>${maven.javadoc.skip}</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <configuration>
                            <skip>${maven.site.skip}</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>${skip.surefire.tests}</skip>
                        </configuration>
                    </plugin>

                    <!-- 3rd Party Plugins -->
                    <!-- ============================================== -->
                    <plugin>
                        <groupId>com.github.ekryd.echo-maven-plugin</groupId>
                        <artifactId>echo-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-fastbuild</id>
                                <goals>
                                    <goal>echo</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <level>INFO</level>
                                    <message><![CDATA[${line.separator}
    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=
    +=  FAST BUILD activated for '${project.artifactId}'.
    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=${line.separator}]]>
                                    </message>
                                </configuration>
                            </execution>
                            <execution>
                                <id>analyze-dependencies-reminder</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Defines operating system specific settings for Windows.
                Syntax          :   automtically chosen
                -->
            <id>os-windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <script.extension>.cmd</script.extension>
            </properties>
        </profile>
        <profile>
            <!--
                Description     :   Defines operating system specific settings for Unix & Linux.
                Syntax          :   automtically chosen
                -->
            <id>os-lunix</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <script.extension/>
            </properties>
        </profile>
        <profile>
            <!--
                Description     :   Informs, that an additional check on dependencies will be activated in future.
                Syntax 1        :   automtically chosen
                Example 1       :   mvn verify
                -->
            <id>deps-lazy</id>
            <activation>
                <property>
                    <name>!deps-strict</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.ekryd.echo-maven-plugin</groupId>
                        <artifactId>echo-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>analyze-dependencies-reminder</id>
                                <goals>
                                    <goal>echo</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <level>INFO</level>
                                    <message><![CDATA[${line.separator}
    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=
    +=
    +=  DON'T forget to check, if the dependencies in '${project.artifactId}' are correctly configured!
    +=  Next time the build may fail, if there is a misconfiguration.
    +=
    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=${line.separator}]]>
                                    </message>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Informs, that an additional check on dependencies is executed.
                Syntax          :   mvn -Ddeps-strict [verify]
                Example         :   mvn -Ddeps-strict verify
                -->
            <id>deps-strict</id>
            <activation>
                <property>
                    <name>deps-strict</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.ekryd.echo-maven-plugin</groupId>
                        <artifactId>echo-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>analyze-dependencies-reminder</id>
                                <goals>
                                    <goal>echo</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <level>INFO</level>
                                    <message><![CDATA[${line.separator}
    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=
    +=
    +=  The check, if the dependencies in '${project.artifactId}' are correctly configured is ACTIVATED!
    +=
    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=${line.separator}]]>
                                    </message>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.shared</groupId>
                                <artifactId>maven-dependency-analyzer</artifactId>
                                <version>${org.apache.maven.shared.maven-dependency-analyzer.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>analyze-report</goal>
                                    <goal>analyze-duplicate</goal>
                                    <goal>analyze-only</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <failOnWarning>true</failOnWarning>
                                    <outputXML>true</outputXML>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Will run when deploying artifact
                See             :   https://maven.apache.org/plugins/maven-deploy-plugin/
                Syntax          :   mvn -Partifact-release [deploy]
                Example         :   mvn -Ddeps-strict=true verify
            -->
            <id>artifact-release</id>
            <activation>
                <property>
                    <name>deploy.skipRelInfo</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <updateReleaseInfo>true</updateReleaseInfo>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Generate checksum & report for the artifact & dependencies
                See             :   https://checksum-maven-plugin.nicoulaj.net/
                Syntax 1        :   mvn -Pgenerate-checksum clean [verify|install]
                Syntax 2        :   mvn -Pgenerate-checksum,artifact-release clean deploy
                Example 1       :   mvn -Pgenerate-checksum -DskipTests -DskipITs clean install
             -->
            <id>generate-checksum</id>
            <properties>
                <checksum.summary-folder>checksum</checksum.summary-folder>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.nicoulaj.maven.plugins</groupId>
                        <artifactId>checksum-maven-plugin</artifactId>
                        <configuration>
                            <algorithms>
                                <algorithm>MD5</algorithm>
                                <algorithm>SHA-1</algorithm>
                                <algorithm>SHA-512</algorithm>
                            </algorithms>
                            <transitive>false</transitive>
                            <failIfNoFiles>false</failIfNoFiles>
                            <individualFilesOutputDirectory>checksum</individualFilesOutputDirectory>
                            <appendFilename>true</appendFilename>
                            <attachChecksums>true</attachChecksums>
                            <individualFiles>true</individualFiles>
                            <csvSummary>true</csvSummary>
                            <xmlSummary>true</xmlSummary>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>artifacts</goal>
                                    <goal>dependencies</goal>
                                    <goal>files</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>${project.artifactId}-${project.version}-source-release.zip
                                                </include>
                                                <include>${project.artifactId}-${project.version}-source-release.tar*
                                                </include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Generate a gpg-signature for the artifact
                See             :   https://maven.apache.org/plugins/maven-gpg-plugin/
                Syntax 1        :   mvn -Pgenerate-gpgkey clean [verify|install]
                Syntax 2        :   mvn -Pgenerate-gpgkey,artifact-release clean deploy
                Example 1       :   mvn -Pgenerate-gpgkey -DskipTests -DskipITs clean install
             -->
            <id>generate-gpgkey</id>
            <properties>
                <!-- GPG Properties -->
                <!--suppress UnresolvedMavenProperty -->
                <sign.exec>${env.SIGN_EXEC}</sign.exec>
                <!--suppress UnresolvedMavenProperty -->
                <sign.homedir>${env.SIGN_HOMEDIR}</sign.homedir>
                <!--suppress UnresolvedMavenProperty -->
                <sign.publicKeyring>${env.SIGN_PUBRING}</sign.publicKeyring>
                <!--suppress UnresolvedMavenProperty -->
                <sign.secretKeyring>${env.SIGN_SECRING}</sign.secretKeyring>
                <!--suppress UnresolvedMavenProperty -->
                <sign.keyname>${env.SIGN_KEYNAME}</sign.keyname>
                <!--suppress UnresolvedMavenProperty -->
                <sign.passphrase>${env.SIGN_PASSPHRASE}</sign.passphrase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>09-generate-asc-signature-prepare</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <failFast>true</failFast>
                                    <rules>
                                        <requireProperty>
                                            <property>clean.cleaned</property>
                                            <message>You must add life-cycle 'clean' when signing an artifact!

                                                See the 'README.adoc' in 'global-pom' for configuration.
                                            </message>
                                        </requireProperty>
                                        <requireFilesExist>
                                            <files>
                                                <file>${sign.exec}</file>
                                                <file>${sign.homedir}</file>
                                                <file>${sign.homedir}/${sign.publicKeyring}</file>
                                            </files>
                                            <message>This file must exist:
                                                sign.exec : ${sign.exec}
                                                sign.homedir : ${sign.homedir}
                                                sign.publicKeyring : ${sign.publicKeyring}

                                                See the 'README.adoc' in 'global-pom' for configuration.
                                            </message>
                                        </requireFilesExist>
                                        <requireProperty>
                                            <property>sign.keyname</property>
                                            <message>This variable must be set:
                                                sign.keyname : ${sign.keyname}

                                                See the 'README.adoc' in 'global-pom' for configuration.
                                            </message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>sign.passphrase</property>
                                            <message>This variable must be set:
                                                sign.passphrase : ${sign.passphrase}

                                                See the 'README.adoc' in 'global-pom' for configuration.
                                            </message>
                                        </requireProperty>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <configuration>
                            <executable>${sign.exec}</executable>
                            <homedir>${sign.homedir}</homedir>
                            <defaultKeyring>false</defaultKeyring>
                            <publicKeyring>${sign.publicKeyring}</publicKeyring>
                            <keyname>${sign.keyname}</keyname>
                            <passphrase>${sign.passphrase}</passphrase>
                            <gpgArguments>
                                <arg>--digest-algo=SHA512</arg>
                            </gpgArguments>
                        </configuration>
                        <executions>
                            <execution>
                                <id>90-generate-asc-signature</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   List all environment variables
                See             :   https://maven.apache.org/plugins/maven-help-plugin/
                Syntax          :   mvn -Pshow-env [any goal]
                Example         :   mvn -Pshow-env validate
             -->
            <id>show-env</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-help-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>show-env</id>
                                <goals>
                                    <goal>system</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   List all environment variables
                See             :   https://maven.apache.org/plugins/maven-help-plugin/
                Syntax          :   mvn -DshowP [any goal]
                Example         :   mvn -PshowP validate
             -->
            <id>show-profile</id>
            <activation>
                <property>
                    <name>showP</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-help-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>active-profiles</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Checks the correctness of the gpg-signature of an artifact
                See             :   https://www.simplify4u.org/pgpverify-maven-plugin/
                Syntax 1        :   mvn -Pverify-signature validate
                Syntax 2        :   mvn -Pverify-signature pgpverify:show -Dartifact=[g:a:v]
                Example 2       :   mvn -Pverify-signature pgpverify:show -Dartifact=org.apache.commons:commons-lang3:3.9
             -->
            <id>verify-signature</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.simplify4u.plugins</groupId>
                        <artifactId>pgpverify-maven-plugin</artifactId>
                        <configuration>
                            <failWeakSignature>false</failWeakSignature>
                            <verifyPlugins>true</verifyPlugins>
                            <verifyAtypical>true</verifyAtypical>
                            <verifyPluginDependencies>true</verifyPluginDependencies>
                            <verifyPomFiles>true</verifyPomFiles>
                            <verifyProvidedDependencies>false</verifyProvidedDependencies>
                            <verifyReactorDependencies>true</verifyReactorDependencies>
                            <verifySnapshots>false</verifySnapshots>
                            <verifySystemDependencies>true</verifySystemDependencies>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>95-verify-artifacts</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
                Description     :   Add some additional repositories for artifact lookups
                Syntax          :   mvn -Pmore-repos [any goal]
                Example         :   mvn -Pmore-repos validate
             -->
            <id>more-repos</id>
            <repositories>
                <repository>
                    <id>zzzz-jboss-group</id>
                    <name>JBoss Central Mirror</name>
                    <url>https://repository.jboss.org/nexus/content/groups/public</url>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>daily</updatePolicy>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>daily</updatePolicy>
                    </releases>
                </repository>
                <repository>
                    <id>zzzz-jboss</id>
                    <name>JBoss Repository</name>
                    <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>daily</updatePolicy>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>daily</updatePolicy>
                    </releases>
                </repository>
            </repositories>
        </profile>
        <profile>
            <!--
                Description     :   Define settings for Github
                Syntax          :   automtically chosen
             -->
            <id>settings-github</id>
            <activation>
                <property>
                    <name>env.GITHUB_ACTOR</name>
                </property>
            </activation>

            <!-- <scm>-->
            <!-- <connection>scm:git:https://github.com/The-oGlow/global-pom.git</connection>-->
            <!-- <developerConnection>scm:git:https://github.com/The-oGlow/global-pom.git</developerConnection>-->
            <!-- <url>${project.env.GH_PROJECT_URL}</url>-->
            <!-- <tag>HEAD</tag>-->
            <!-- </scm>-->

            <!-- <issueManagement>-->
            <!-- <system>Github Issues 4 ${project.name}</system>-->
            <!-- <url>${project.env.GH_PROJECT_URL}/issues</url>-->
            <!-- </issueManagement>-->

            <!-- <ciManagement>-->
            <!-- <system>github</system>-->
            <!-- <url>${project.env.GH_PROJECT_URL}/actions</url>-->
            <!-- </ciManagement>-->

            <properties>
                <!-- Github Properties -->
                <!-- ============================================== -->
                <!-- The base url of the git-server -->
                <vcs.env.BASE_URL>https://github.com</vcs.env.BASE_URL>
                <!-- This github repository -->
                <project.env.GH_PROJECT_NAME>${project.artifactId}</project.env.GH_PROJECT_NAME>
                <!-- The organization of this github repository -->
                <project.env.GH_GROUP_NAME>The-oGlow</project.env.GH_GROUP_NAME>
                <!-- The unique identifier of this project -->
                <project.env.GH_IDENTIFIER>${project.env.GH_GROUP_NAME}/${project.env.GH_PROJECT_NAME}
                </project.env.GH_IDENTIFIER>
                <!-- The base git-url of the organisation -->
                <project.env.GH_GROUP_URL>${vcs.env.BASE_URL}/${project.env.GH_GROUP_NAME}</project.env.GH_GROUP_URL>
                <!-- The base git-url of this project -->
                <project.env.GH_PROJECT_URL>${vcs.env.BASE_URL}/${project.env.GH_IDENTIFIER}
                </project.env.GH_PROJECT_URL>

                <!-- Sonar Properties -->
                <!-- ============================================== -->
                <sonar.organization>the-oglow</sonar.organization>
            </properties>
        </profile>
        <profile>
            <!--
                Description     :   Define deploy settings for Github
                Syntax          :   mvn -DdepGithub [deploy]
                Example         :   mvn -DdepGithub deploy
             -->
            <id>deploy-github</id>
            <activation>
                <property>
                    <name>depGithub</name>
                </property>
            </activation>

            <!-- Section Distribution -->
            <!-- ============================================== -->
            <distributionManagement>
                <snapshotRepository>
                    <id>coding.github.ss.deploy</id>
                    <name>ASS-Awesome Snap Shots</name>
                    <url>https://maven.pkg.github.com/The-oGlow/Awesome-Snap-Shots</url>
                    <uniqueVersion>false</uniqueVersion>
                </snapshotRepository>
                <repository>
                    <id>coding.github.deploy</id>
                    <name>CAI-Central Awesome Index</name>
                    <url>https://maven.pkg.github.com/The-oGlow/Central-Awesome-Index</url>
                    <uniqueVersion>true</uniqueVersion>
                </repository>
                <site>
                    <id>coding-glowa.site</id>
                    <name>Coding Glowa Site</name>
                    <url>scp://ssh.strato.de/glowa-net_com/coding/maven/apidoc</url>
                </site>
                <downloadUrl>https://maven.pkg.github.com/The-oGlow/Awesome-Snap-Shots</downloadUrl>
            </distributionManagement>
        </profile>
        <profile>
            <!--
                Description     :   Define settings for Github, working on a git-branch
                Syntax          :   automtically chosen
             -->
            <id>settings-github-branch</id>
            <activation>
                <property>
                    <name>env.GITHUB_BRANCH_NAME</name>
                </property>
            </activation>
            <properties>
                <sonar.branch.name>${env.GITHUB_BRANCH_NAME}</sonar.branch.name>
            </properties>
        </profile>
        <profile>
            <!--
                Description     :   Define settings for Gitlab
                Syntax          :   automtically chosen
             -->
            <id>settings-gitlab</id>
            <activation>
                <property>
                    <name>env.GITLAB_USER_LOGIN</name>
                </property>
            </activation>

            <!-- <scm>-->
            <!-- <connection>scm:git:https://gitlab.com/The-oGlow/global-pom.git</connection>-->
            <!-- <developerConnection>scm:git:https://gitlab.com/The-oGlow/global-pom.git</developerConnection>-->
            <!-- <url>${project.env.CI_PROJECT_URL}</url>-->
            <!-- <tag>HEAD</tag>-->
            <!-- </scm>-->

            <!-- <issueManagement>-->
            <!-- <system>GitLab Issues 4 ${project.name}</system>-->
            <!-- <url>${project.env.CI_PROJECT_URL}/-/issues</url>-->
            <!-- </issueManagement>-->

            <!-- <ciManagement>-->
            <!-- <system>gitlab</system>-->
            <!-- <url>${project.env.CI_PROJECT_URL}/-/pipelines</url>-->
            <!-- </ciManagement>-->

            <properties>
                <!-- Gitlab Properties -->
                <!-- ============================================== -->
                <!-- The base url of the git-server -->
                <vcs.env.BASE_URL>https://gitlab.com</vcs.env.BASE_URL>
                <!-- This gitlab repository -->
                <project.env.CI_PROJECT_NAME>${project.artifactId}</project.env.CI_PROJECT_NAME>
                <!-- The ID of this gitlab repository -->
                <project.env.CI_PROJECT_ID>22292701</project.env.CI_PROJECT_ID>
                <!-- The organization of this gitlab repository -->
                <project.env.CI_GROUP_NAME>The-oGlow</project.env.CI_GROUP_NAME>
                <!-- The ID of this organization of this gitlab repository -->
                <project.env.CI_GROUP_ID>10107405</project.env.CI_GROUP_ID>
                <!-- The unique identifier of this project -->
                <project.env.CI_IDENTIFIER>${project.env.CI_GROUP_NAME}/${project.env.CI_PROJECT_NAME}
                </project.env.CI_IDENTIFIER>
                <!-- The base git-url of the organisation -->
                <project.env.CI_GROUP_URL>${vcs.env.BASE_URL}/${project.env.CI_GROUP_NAME}</project.env.CI_GROUP_URL>
                <!-- The base git-url of this project -->
                <project.env.CI_PROJECT_URL>${vcs.env.BASE_URL}/${project.env.CI_IDENTIFIER}
                </project.env.CI_PROJECT_URL>
                <!-- ID of the Gitlab project for release repository -->
                <repo.env.REPO_FINAL_ID>30704991</repo.env.REPO_FINAL_ID>
                <!-- ID of the Gitlab project for snapshot repository -->
                <repo.env.REPO_SNAP_ID>26363808</repo.env.REPO_SNAP_ID>

                <!-- Sonar Properties -->
                <!-- ============================================== -->
                <sonar.organization>the-oglow</sonar.organization>
            </properties>
        </profile>
        <profile>
            <!--
                Description     :   Define deploy settings for Gitlab
                Syntax          :   mvn -DdepGitlab [deploy]
                Example         :   mvn -DdepGitlab deploy
             -->
            <id>deploy-gitlab</id>
            <activation>
                <property>
                    <name>depGitlab</name>
                </property>
            </activation>

            <!-- Section Distribution -->
            <!-- ============================================== -->
            <distributionManagement>
                <snapshotRepository>
                    <id>coding.gitlab.write-ss</id>
                    <name>ASS-Awesome Snap Shots</name>
                    <url>https://gitlab.com/api/v4/projects/26363808/packages/maven</url>
                    <uniqueVersion>false</uniqueVersion>
                </snapshotRepository>
                <repository>
                    <id>coding.gitlab.write</id>
                    <name>CAI-Central Awesome Index</name>
                    <url>https://gitlab.com/api/v4/projects/30704991/packages/maven</url>
                    <uniqueVersion>true</uniqueVersion>
                </repository>
                <downloadUrl>https://gitlab.com/api/v4/groups/10107405/-/packages/maven</downloadUrl>
            </distributionManagement>
        </profile>
    </profiles>
</project>
